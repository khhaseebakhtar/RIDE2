# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'RIDEv2.0_userinterface .ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_main_window(object):
    def setupUi(self, main_window):
        main_window.setObjectName("main_window")
        main_window.resize(906, 635)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(main_window.sizePolicy().hasHeightForWidth())
        main_window.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(True)
        main_window.setFont(font)
        main_window.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        main_window.setWindowOpacity(7.0)
        main_window.setToolTip("")
        main_window.setToolTipDuration(1)
        main_window.setLayoutDirection(QtCore.Qt.LeftToRight)
        main_window.setStyleSheet("background-color: rgb(51, 51, 51);\n"
"font: 10pt \"Arial\";\n"
"color: rgb(171, 243, 2);")
        main_window.setInputMethodHints(QtCore.Qt.ImhPreferNumbers)
        self.centralwidget = QtWidgets.QWidget(main_window)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(30, 20, 831, 71))
        self.widget.setObjectName("widget")
        self.l_device_list = QtWidgets.QLabel(self.widget)
        self.l_device_list.setGeometry(QtCore.QRect(50, 10, 81, 20))
        self.l_device_list.setToolTip("")
        self.l_device_list.setToolTipDuration(1)
        self.l_device_list.setObjectName("l_device_list")
        self.l_output_file = QtWidgets.QLabel(self.widget)
        self.l_output_file.setGeometry(QtCore.QRect(50, 40, 81, 20))
        self.l_output_file.setToolTip("")
        self.l_output_file.setToolTipDuration(1)
        self.l_output_file.setObjectName("l_output_file")
        self.le_device_list = QtWidgets.QLineEdit(self.widget)
        self.le_device_list.setGeometry(QtCore.QRect(170, 10, 341, 21))
        self.le_device_list.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(168, 255, 6);\n"
"color: rgb(0, 0, 0);")
        self.le_device_list.setText("")
        self.le_device_list.setObjectName("le_device_list")
        self.le_output_file = QtWidgets.QLineEdit(self.widget)
        self.le_output_file.setGeometry(QtCore.QRect(170, 40, 341, 21))
        self.le_output_file.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(168, 255, 6);\n"
"color: rgb(0, 0, 0);")
        self.le_output_file.setText("")
        self.le_output_file.setObjectName("le_output_file")
        self.b_device_list_open = QtWidgets.QPushButton(self.widget)
        self.b_device_list_open.setGeometry(QtCore.QRect(552, 11, 91, 23))
        self.b_device_list_open.setStyleSheet("background-color: rgb(89, 89, 89);\n"
"color: rgb(171, 243, 2);")
        self.b_device_list_open.setText("Load Excel")
        self.b_device_list_open.setObjectName("b_device_list_open")
        self.b_outputfile_open = QtWidgets.QPushButton(self.widget)
        self.b_outputfile_open.setGeometry(QtCore.QRect(550, 40, 91, 23))
        self.b_outputfile_open.setStyleSheet("background-color: rgb(89, 89, 89);\n"
"color: rgb(171, 243, 2);")
        self.b_outputfile_open.setObjectName("b_outputfile_open")
        self.lcd_total_devices = QtWidgets.QLCDNumber(self.widget)
        self.lcd_total_devices.setGeometry(QtCore.QRect(720, 40, 61, 21))
        self.lcd_total_devices.setObjectName("lcd_total_devices")
        self.b_from_list = QtWidgets.QPushButton(self.widget)
        self.b_from_list.setGeometry(QtCore.QRect(643, 11, 91, 23))
        self.b_from_list.setStyleSheet("background-color: rgb(89, 89, 89);\n"
"color: rgb(171, 243, 2);")
        self.b_from_list.setObjectName("b_from_list")
        self.widget_2 = QtWidgets.QWidget(self.centralwidget)
        self.widget_2.setGeometry(QtCore.QRect(30, 100, 781, 530))
        self.widget_2.setObjectName("widget_2")
        self.gb_required_outputs = QtWidgets.QGroupBox(self.widget_2)
        self.gb_required_outputs.setGeometry(QtCore.QRect(0, 251, 341, 221))
        self.gb_required_outputs.setStyleSheet("color: rgb(255, 146, 37);")
        self.gb_required_outputs.setObjectName("gb_required_outputs")
        self.b_select_all = QtWidgets.QPushButton(self.gb_required_outputs)
        self.b_select_all.setGeometry(QtCore.QRect(240, 220, 81, 21))
        self.b_select_all.setStyleSheet("background-color: rgb(70, 70, 70);color:rgb(171, 243, 2);\n"
"font: 8pt \"Calibri\";")
        self.b_select_all.setObjectName("b_select_all")
        self.layoutWidget = QtWidgets.QWidget(self.gb_required_outputs)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 30, 281, 171))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(4)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.cb_physical_inteface = QtWidgets.QCheckBox(self.layoutWidget)
        self.cb_physical_inteface.setStyleSheet("color: rgb(171, 243, 2);")
        self.cb_physical_inteface.setObjectName("cb_physical_inteface")
        self.verticalLayout_4.addWidget(self.cb_physical_inteface)
        self.cb_interface_decription = QtWidgets.QCheckBox(self.layoutWidget)
        self.cb_interface_decription.setStyleSheet("color: rgb(171, 243, 2);")
        self.cb_interface_decription.setObjectName("cb_interface_decription")
        self.verticalLayout_4.addWidget(self.cb_interface_decription)
        self.cb_trunks = QtWidgets.QCheckBox(self.layoutWidget)
        self.cb_trunks.setStyleSheet("color: rgb(171, 243, 2);")
        self.cb_trunks.setObjectName("cb_trunks")
        self.verticalLayout_4.addWidget(self.cb_trunks)
        self.cb_licenses = QtWidgets.QCheckBox(self.layoutWidget)
        self.cb_licenses.setStyleSheet("color: rgb(171, 243, 2);")
        self.cb_licenses.setChecked(False)
        self.cb_licenses.setObjectName("cb_licenses")
        self.verticalLayout_4.addWidget(self.cb_licenses)
        self.cb_port_lic_utilization = QtWidgets.QCheckBox(self.layoutWidget)
        self.cb_port_lic_utilization.setStyleSheet("color: rgb(171, 243, 2);")
        self.cb_port_lic_utilization.setChecked(False)
        self.cb_port_lic_utilization.setObjectName("cb_port_lic_utilization")
        self.verticalLayout_4.addWidget(self.cb_port_lic_utilization)
        self.cb_optical_modules = QtWidgets.QCheckBox(self.layoutWidget)
        self.cb_optical_modules.setStyleSheet("color: rgb(171, 243, 2);")
        self.cb_optical_modules.setChecked(False)
        self.cb_optical_modules.setObjectName("cb_optical_modules")
        self.verticalLayout_4.addWidget(self.cb_optical_modules)
        self.cb_lpu_cards = QtWidgets.QCheckBox(self.layoutWidget)
        self.cb_lpu_cards.setMouseTracking(False)
        self.cb_lpu_cards.setAccessibleDescription("")
        self.cb_lpu_cards.setStyleSheet("color: rgb(171, 243, 2);")
        self.cb_lpu_cards.setChecked(False)
        self.cb_lpu_cards.setObjectName("cb_lpu_cards")
        self.verticalLayout_4.addWidget(self.cb_lpu_cards)
        self.gb_aaa_credentials = QtWidgets.QGroupBox(self.widget_2)
        self.gb_aaa_credentials.setGeometry(QtCore.QRect(0, 40, 341, 211))
        self.gb_aaa_credentials.setStyleSheet("color: rgb(255, 146, 37);")
        self.gb_aaa_credentials.setObjectName("gb_aaa_credentials")
        self.splitter = QtWidgets.QSplitter(self.gb_aaa_credentials)
        self.splitter.setGeometry(QtCore.QRect(20, 50, 291, 20))
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.le_username = QtWidgets.QLineEdit(self.splitter)
        self.le_username.setToolTip("")
        self.le_username.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.le_username.setText("")
        self.le_username.setObjectName("le_username")
        self.le_password = QtWidgets.QLineEdit(self.splitter)
        self.le_password.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(168, 255, 6);\n"
"color: rgb(0, 0, 0);")
        self.le_password.setText("")
        self.le_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.le_password.setObjectName("le_password")
        self.layoutWidget1 = QtWidgets.QWidget(self.gb_aaa_credentials)
        self.layoutWidget1.setGeometry(QtCore.QRect(50, 30, 210, 19))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.l_username = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        self.l_username.setFont(font)
        self.l_username.setToolTip("")
        self.l_username.setToolTipDuration(1)
        self.l_username.setStyleSheet("color: rgb(171, 243, 2);")
        self.l_username.setObjectName("l_username")
        self.horizontalLayout.addWidget(self.l_username)
        spacerItem = QtWidgets.QSpacerItem(78, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.l_password = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        self.l_password.setFont(font)
        self.l_password.setToolTip("")
        self.l_password.setToolTipDuration(1)
        self.l_password.setStyleSheet("color: rgb(171, 243, 2);")
        self.l_password.setObjectName("l_password")
        self.horizontalLayout.addWidget(self.l_password)
        self.l_device_vendor = QtWidgets.QLabel(self.gb_aaa_credentials)
        self.l_device_vendor.setGeometry(QtCore.QRect(40, 90, 101, 21))
        self.l_device_vendor.setToolTipDuration(1)
        self.l_device_vendor.setStyleSheet("color: rgb(171, 243, 2);")
        self.l_device_vendor.setObjectName("l_device_vendor")
        self.widget1 = QtWidgets.QWidget(self.gb_aaa_credentials)
        self.widget1.setGeometry(QtCore.QRect(20, 120, 139, 81))
        self.widget1.setObjectName("widget1")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.rb_juniper = QtWidgets.QRadioButton(self.widget1)
        self.rb_juniper.setObjectName("rb_juniper")
        self.verticalLayout.addWidget(self.rb_juniper)
        self.rb_huawei = QtWidgets.QRadioButton(self.widget1)
        self.rb_huawei.setObjectName("rb_huawei")
        self.verticalLayout.addWidget(self.rb_huawei)
        self.rb_identify = QtWidgets.QRadioButton(self.widget1)
        self.rb_identify.setChecked(True)
        self.rb_identify.setObjectName("rb_identify")
        self.verticalLayout.addWidget(self.rb_identify)
        self.le_thread_count = QtWidgets.QLineEdit(self.gb_aaa_credentials)
        self.le_thread_count.setGeometry(QtCore.QRect(160, 140, 56, 20))
        self.le_thread_count.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.le_thread_count.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(168, 255, 6);\n"
"color: rgb(0, 0, 0);")
        self.le_thread_count.setInputMethodHints(QtCore.Qt.ImhPreferNumbers)
        self.le_thread_count.setAlignment(QtCore.Qt.AlignCenter)
        self.le_thread_count.setObjectName("le_thread_count")
        self.le_thread_count_2 = QtWidgets.QLineEdit(self.gb_aaa_credentials)
        self.le_thread_count_2.setGeometry(QtCore.QRect(260, 140, 56, 20))
        self.le_thread_count_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.le_thread_count_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(168, 255, 6);\n"
"color: rgb(0, 0, 0);")
        self.le_thread_count_2.setInputMethodHints(QtCore.Qt.ImhPreferNumbers)
        self.le_thread_count_2.setAlignment(QtCore.Qt.AlignCenter)
        self.le_thread_count_2.setObjectName("le_thread_count_2")
        self.l_total_devices_2 = QtWidgets.QLabel(self.gb_aaa_credentials)
        self.l_total_devices_2.setGeometry(QtCore.QRect(150, 110, 91, 21))
        self.l_total_devices_2.setToolTipDuration(1)
        self.l_total_devices_2.setStyleSheet("color: rgb(171, 243, 2);")
        self.l_total_devices_2.setObjectName("l_total_devices_2")
        self.l_ssh_port = QtWidgets.QLabel(self.gb_aaa_credentials)
        self.l_ssh_port.setGeometry(QtCore.QRect(260, 110, 71, 21))
        self.l_ssh_port.setToolTipDuration(1)
        self.l_ssh_port.setStyleSheet("color: rgb(171, 243, 2);")
        self.l_ssh_port.setObjectName("l_ssh_port")
        self.b_exit = QtWidgets.QPushButton(self.widget_2)
        self.b_exit.setGeometry(QtCore.QRect(670, 480, 111, 25))
        self.b_exit.setStyleSheet("background-color: rgb(70, 70, 70);color:rgb(171, 243, 2)")
        self.b_exit.setObjectName("b_exit")
        self.label = QtWidgets.QLabel(self.widget_2)
        self.label.setGeometry(QtCore.QRect(220, 490, 281, 20))
        self.label.setStyleSheet("font: 8pt \"SAPGUI-Belize-Icons\";\n"
"color: rgb(88, 88, 88);\n"
"")
        self.label.setObjectName("label")
        self.b_extract = QtWidgets.QPushButton(self.widget_2)
        self.b_extract.setGeometry(QtCore.QRect(550, 480, 111, 25))
        self.b_extract.setStyleSheet("background-color: rgb(70, 70, 70);color:rgb(171, 243, 2)")
        self.b_extract.setObjectName("b_extract")
        self.groupBox = QtWidgets.QGroupBox(self.widget_2)
        self.groupBox.setGeometry(QtCore.QRect(350, 40, 431, 431))
        self.groupBox.setStyleSheet("color: rgb(255, 146, 37);")
        self.groupBox.setObjectName("groupBox")
        self.te_output_panel = QtWidgets.QPlainTextEdit(self.groupBox)
        self.te_output_panel.setGeometry(QtCore.QRect(20, 20, 391, 391))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        self.te_output_panel.setFont(font)
        self.te_output_panel.setStyleSheet("color: rgb(171, 243, 2);")
        self.te_output_panel.setObjectName("te_output_panel")
        self.progressBar = QtWidgets.QProgressBar(self.widget_2)
        self.progressBar.setGeometry(QtCore.QRect(0, 20, 781, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setStyleSheet("background-color: rgb(193, 129, 0);\n"
"background-color: rgb(221, 74, 0);")
        self.progressBar.setProperty("value", 0)
        self.progressBar.setTextVisible(False)
        self.progressBar.setObjectName("progressBar")
        main_window.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(main_window)
        self.statusbar.setObjectName("statusbar")
        main_window.setStatusBar(self.statusbar)

        self.retranslateUi(main_window)
        QtCore.QMetaObject.connectSlotsByName(main_window)

    def retranslateUi(self, main_window):
        _translate = QtCore.QCoreApplication.translate
        main_window.setWindowTitle(_translate("main_window", "RIDE 1.4"))
        self.l_device_list.setText(_translate("main_window", "Device List"))
        self.l_output_file.setText(_translate("main_window", "Output File"))
        self.le_device_list.setPlaceholderText(_translate("main_window", "Select input xlsx file with device IPs in Sheet1 & col \'A\'"))
        self.le_output_file.setPlaceholderText(_translate("main_window", "Select output file path"))
        self.b_outputfile_open.setText(_translate("main_window", "Browse"))
        self.b_from_list.setText(_translate("main_window", "From List"))
        self.gb_required_outputs.setTitle(_translate("main_window", "Required Outputs"))
        self.b_select_all.setText(_translate("main_window", "Select All"))
        self.cb_physical_inteface.setText(_translate("main_window", "Physical Interface Details"))
        self.cb_interface_decription.setText(_translate("main_window", "All interfaces & Descriptions"))
        self.cb_trunks.setText(_translate("main_window", "Trunks and their Bandwidth"))
        self.cb_licenses.setText(_translate("main_window", "Loaded Licenses"))
        self.cb_port_lic_utilization.setText(_translate("main_window", "License Usage for Ports"))
        self.cb_optical_modules.setText(_translate("main_window", "Opticlal Module Details"))
        self.cb_lpu_cards.setText(_translate("main_window", "Inventory Report"))
        self.gb_aaa_credentials.setTitle(_translate("main_window", "AAA Credentials"))
        self.le_username.setPlaceholderText(_translate("main_window", "Enter Username"))
        self.le_password.setPlaceholderText(_translate("main_window", "Enter Password"))
        self.l_username.setText(_translate("main_window", "Username"))
        self.l_password.setText(_translate("main_window", "Password"))
        self.l_device_vendor.setToolTip(_translate("main_window", "No of devices processed simultaneously "))
        self.l_device_vendor.setText(_translate("main_window", "Device Vendor"))
        self.rb_juniper.setText(_translate("main_window", "Juniper"))
        self.rb_huawei.setText(_translate("main_window", "Huawei"))
        self.rb_identify.setText(_translate("main_window", "Both please identify"))
        self.le_thread_count.setToolTip(_translate("main_window", "No of devices processed simultaneously "))
        self.le_thread_count.setText(_translate("main_window", "15"))
        self.le_thread_count_2.setToolTip(_translate("main_window", "No of devices processed simultaneously "))
        self.le_thread_count_2.setText(_translate("main_window", "22"))
        self.l_total_devices_2.setToolTip(_translate("main_window", "No of devices processed simultaneously "))
        self.l_total_devices_2.setText(_translate("main_window", "No of Threads"))
        self.l_ssh_port.setToolTip(_translate("main_window", "No of devices processed simultaneously "))
        self.l_ssh_port.setText(_translate("main_window", "SSH Port"))
        self.b_exit.setText(_translate("main_window", "Exit"))
        self.label.setText(_translate("main_window", "Design & Developed By: Haseeb Akhtar"))
        self.b_extract.setText(_translate("main_window", "Execute"))
        self.groupBox.setTitle(_translate("main_window", "Output Logs"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    main_window = QtWidgets.QMainWindow()
    ui = Ui_main_window()
    ui.setupUi(main_window)
    main_window.show()
    sys.exit(app.exec_())
